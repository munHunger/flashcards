{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  window\n    .fetch(\"/lists.json\")\n    .then(res => res.json())\n    .then(lists => {\n      window\n        .fetch(lists[0].path)\n        .then(res => res.text())\n        .then(list => {\n          list.split(\"\\n\").forEach(row => {\n            let parts = row.split(\";\");\n            cards.push({\n              jp: parts[0],\n              rom: parts[1],\n              en: parts[2]\n            });\n          });\n          console.log(cards);\n          card = getRandomCard();\n        });\n    });\n  let correct = 0;\n  let errors = 0;\n  let lastCorrect = \"\";\n  let cards = [\n    {\n      jp: \"ねこ\",\n      rom: \"neko\",\n      en: \"cat\"\n    },\n    {\n      jp: \"あの\",\n      rom: \"ano\",\n      en: \"um\"\n    },\n    {\n      jp: \"いま\",\n      rom: \"ima\",\n      en: \"now\"\n    },\n    {\n      jp: \"えいご\",\n      rom: \"eego\",\n      en: \"english\"\n    },\n    {\n      jp: \"ええ\",\n      rom: \"ee\",\n      en: \"yes\"\n    },\n    {\n      jp: \"がくせい\",\n      rom: \"gakusei\",\n      en: \"student\"\n    },\n    {\n      jp: \"~ご\",\n      rom: \"go\",\n      en: \"language\"\n    },\n    {\n      jp: \"こうこう\",\n      rom: \"koukou\",\n      en: \"high school\"\n    },\n    {\n      jp: \"ごご\",\n      rom: \"gogo\",\n      en: \"pm\"\n    },\n    {\n      jp: \"ごぜん\",\n      rom: \"gozen\",\n      en: \"am\"\n    },\n    {\n      jp: \"~さい\",\n      rom: \"sai\",\n      en: \"years old\"\n    },\n    {\n      jp: \"~さん\",\n      rom: \"san\",\n      en: \"mr/ms\"\n    },\n    {\n      jp: \"~じ\",\n      rom: \"ji\",\n      en: \"oclock\"\n    },\n    {\n      jp: \"~じん\",\n      rom: \"jin\",\n      en: \"people\"\n    },\n    {\n      jp: \"せんこう\",\n      rom: \"senkou\",\n      en: \"major\"\n    },\n    {\n      jp: \"せんせい\",\n      rom: \"sensei\",\n      en: \"teacher\"\n    },\n    {\n      jp: \"そうです\",\n      rom: \"sou desu\",\n      en: \"thats right\"\n    },\n    {\n      jp: \"そうですか\",\n      rom: \"sou desu ka\",\n      en: \"is that so\"\n    },\n    {\n      jp: \"だいがく\",\n      rom: \"daigaku\",\n      en: \"university\"\n    },\n    {\n      jp: \"でんわ\",\n      rom: \"denwa\",\n      en: \"telephone\"\n    },\n    {\n      jp: \"ともだち\",\n      rom: \"tomodachi\",\n      en: \"friend\"\n    },\n    {\n      jp: \"なまえ\",\n      rom: \"namae\",\n      en: \"name\"\n    },\n    {\n      jp: \"なに\",\n      rom: \"nani\",\n      en: \"what\"\n    },\n    {\n      jp: \"にほん\",\n      rom: \"nihon\",\n      en: \"japan\"\n    },\n    {\n      jp: \"~ねんせい\",\n      rom: \"nensei\",\n      en: \"year student\"\n    },\n    {\n      jp: \"はい\",\n      rom: \"hai\",\n      en: \"yes\"\n    },\n    {\n      jp: \"はん\",\n      rom: \"han\",\n      en: \"half\"\n    },\n    {\n      jp: \"ばんごう\",\n      rom: \"bangou\",\n      en: \"number\"\n    },\n    {\n      jp: \"りゅうがくせい\",\n      rom: \"ryuugakusei\",\n      en: \"international student\"\n    },\n    {\n      jp: \"わたし\",\n      rom: \"watashi\",\n      en: \"i\"\n    }\n  ];\n  cards = [];\n  let errorStack = [];\n\n  let card = undefined;\n  let currentInput = \"\";\n\n  function getRandomCard() {\n    console.log(errorStack);\n    console.log(\n      Math.random() < 0.3 * errorStack.length || errorStack.length === 0\n    );\n    let currentRom = (card || {}).rom;\n    let newCard = undefined;\n    while (!newCard || newCard.rom === currentRom)\n      newCard =\n        Math.random() < 0.5 || errorStack.length === 0\n          ? {\n              ...cards[Math.floor(Math.random() * cards.length)],\n              jpToRom: Math.random() >= 0.5\n            }\n          : {\n              ...errorStack[Math.floor(Math.random() * errorStack.length)],\n              repeat: true\n            };\n    return newCard;\n  }\n\n  function handleKeydown(e) {\n    if (e.key === \"Backspace\")\n      currentInput = currentInput.substring(0, currentInput.length - 1);\n    if (e.key === \"Enter\") next(false);\n    if (e.key.length > 1) return;\n    currentInput += e.key;\n    let ans = card.jpToRom ? card.en : card.rom;\n    console.log(currentInput + \"\\t\" + ans);\n\n    if (currentInput === ans) {\n      next(true);\n    } else if (currentInput.length >= ans.length) {\n      next(false);\n    }\n  }\n  function next(wasCorrect) {\n    currentInput = \"\";\n    if (wasCorrect) {\n      if (card.repeat) errorStack = errorStack.filter(e => e.rom != card.rom);\n      lastCorrect = \"\";\n      correct++;\n      card = getRandomCard();\n    } else {\n      errorStack.push(card);\n      lastCorrect = card.jpToRom ? card.en : card.rom;\n      errors++;\n    }\n  }\n</script>\n\n<style>\n  :global(body) {\n    background-color: rgb(46, 49, 51);\n  }\n  .card {\n    font-size: 15rem;\n    color: #287588;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 100%;\n    text-align: center;\n  }\n  .correct {\n    position: absolute;\n    top: 10%;\n    right: 10%;\n    font-size: 5rem;\n    color: #28887b;\n  }\n  .errors {\n    position: absolute;\n    top: 10%;\n    left: 10%;\n    font-size: 5rem;\n    color: #7a134c;\n  }\n\n  .last {\n    position: absolute;\n    top: 10%;\n    left: 0%;\n    width: 100%;\n    text-align: center;\n    font-size: 5rem;\n    color: #7a134c;\n  }\n\n  .input {\n    position: absolute;\n    bottom: 10%;\n    left: 0%;\n    width: 100%;\n    text-align: center;\n    font-size: 5rem;\n    color: #287588;\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} />\n{#if card}\n  <div class=\"card\">{card.jpToRom ? card.jp : card.en}</div>\n{/if}\n<div class=\"correct\">{correct}</div>\n<div class=\"errors\">{errors}</div>\n\n<div class=\"input\">{currentInput}</div>\n\n<div class=\"last\">{lastCorrect}</div>\n"
  ],
  "names": [],
  "mappings": "AA0OU,IAAI,AAAE,CAAC,AACb,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AACnC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,OAAO,CACd,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,EAAE,CACR,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,IAAI,CAAE,EAAE,CACR,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC"
}